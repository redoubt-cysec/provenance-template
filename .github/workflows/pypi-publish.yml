name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish_to_pypi:
        description: 'Publish to production PyPI (default: TestPyPI only)'
        type: boolean
        default: false
      version:
        description: 'Version to publish (e.g., v0.1.0)'
        required: false

permissions:
  contents: read
  id-token: write  # Required for attestations

jobs:
  build:
    name: Build Python Package
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.11'

      - name: Install uv
        run: |
          curl -LsSf https://github.com/astral-sh/uv/releases/download/0.5.11/uv-installer.sh -o /tmp/uv-install.sh
          echo "505407eb4b5bec00e0b231c8c86e968ee3f5aa0136d49dd8a541179e7f76ce7d  /tmp/uv-install.sh" | sha256sum -c -
          sh /tmp/uv-install.sh && rm /tmp/uv-install.sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Set deterministic environment
        run: |
          echo "TZ=UTC" >> $GITHUB_ENV
          echo "LC_ALL=C" >> $GITHUB_ENV
          echo "LANG=C" >> $GITHUB_ENV
          echo "PYTHONHASHSEED=0" >> $GITHUB_ENV
          echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
          umask 0022

      - name: Build package
        run: |
          uv pip install --system --upgrade pip build
          uv run --no-project python -m build

      - name: Verify package
        run: |
          uv pip install --system twine
          twine check dist/*

      - name: List built artifacts
        run: |
          ls -lh dist/
          echo "Built packages:"
          for file in dist/*; do
            echo "  - $(basename $file): $(stat -c%s $file 2>/dev/null || stat -f%z $file) bytes"
          done

      - name: Upload build artifacts
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.3
        with:
          name: python-packages
          path: dist/
          retention-days: 7

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/project/provenance-demo/

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: python-packages
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@fb13cb306901256ace3dab689990e13a5550ffaa # v1.12.2
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TESTPYPI_TOKEN }}
          skip-existing: true
          print-hash: true

      - name: Create TestPyPI summary
        run: |
          VERSION=$(ls dist/*.whl | grep -oP 'provenance_demo-\K[0-9.]+' | head -1)

          echo "## TestPyPI Publication" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package**: provenance-demo" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: $VERSION" >> $GITHUB_STEP_SUMMARY
          echo "**TestPyPI URL**: https://test.pypi.org/project/provenance-demo/$VERSION/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Install from TestPyPI:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "pip install --index-url https://test.pypi.org/simple/ \\" >> $GITHUB_STEP_SUMMARY
          echo "    --extra-index-url https://pypi.org/simple/ \\" >> $GITHUB_STEP_SUMMARY
          echo "    provenance-demo==$VERSION" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  publish-pypi:
    name: Publish to Production PyPI
    needs: [build, publish-testpypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.publish_to_pypi)
    environment:
      name: pypi
      url: https://pypi.org/project/provenance-demo/

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: python-packages
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@fb13cb306901256ace3dab689990e13a5550ffaa # v1.12.2
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          print-hash: true

      - name: Generate attestations
        uses: actions/attest-build-provenance@1c608d11d69870c2092266b3f9a6f3abbf17002c # v1.4.3
        with:
          subject-path: 'dist/*'

      - name: Create PyPI summary
        run: |
          VERSION=$(ls dist/*.whl | grep -oP 'provenance_demo-\K[0-9.]+' | head -1)

          echo "## PyPI Publication ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package**: provenance-demo" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: $VERSION" >> $GITHUB_STEP_SUMMARY
          echo "**PyPI URL**: https://pypi.org/project/provenance-demo/$VERSION/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Install from PyPI:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "pip install provenance-demo==$VERSION" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Verify attestations:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "gh attestation verify provenance_demo-$VERSION-py3-none-any.whl \\" >> $GITHUB_STEP_SUMMARY
          echo "    --owner redoubt-cysec" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  test-installation:
    name: Test Installation from TestPyPI
    needs: publish-testpypi
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get version
        id: version
        run: |
          # Wait a bit for TestPyPI to propagate
          sleep 10
          echo "version=${{ github.event.release.tag_name || inputs.version }}" | sed 's/^v//' >> $GITHUB_OUTPUT

      - name: Install from TestPyPI
        run: |
          pip install --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple/ \
            provenance-demo || {
            echo "Installation failed - package may not be available yet"
            exit 0
          }

      - name: Test CLI
        run: |
          provenance-demo --version || echo "CLI test skipped"
          provenance-demo hello "PyPI test on Python ${{ matrix.python-version }}" || echo "CLI test skipped"

      - name: Create test summary
        if: always()
        run: |
          echo "## Installation Test (Python ${{ matrix.python-version }})" >> $GITHUB_STEP_SUMMARY
          if command -v provenance-demo &> /dev/null; then
            echo "✅ Installation successful" >> $GITHUB_STEP_SUMMARY
            echo "✅ CLI working" >> $GITHUB_STEP_SUMMARY
          else
            echo "⏩ Test skipped (package propagation)" >> $GITHUB_STEP_SUMMARY
          fi
