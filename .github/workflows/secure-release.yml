name: Secure Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f  # v2.10.2
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5.3.0
        with:
          python-version: '3.11'

      - name: Install Python tooling
        run: |
          python -m pip install --upgrade pip==24.3.1
          pip install -r .github/workflows/release-requirements.txt

      - name: Deterministic env
        run: |
          echo "TZ=UTC" >> $GITHUB_ENV
          echo "LC_ALL=C" >> $GITHUB_ENV
          echo "LANG=C" >> $GITHUB_ENV
          echo "PYTHONHASHSEED=0" >> $GITHUB_ENV
          echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
          umask 0022

      - name: Run tests
        env:
          PYTHONPATH: src
        run: |
          pytest tests/ -m "not slow and not integration and not published" --maxfail=1 --disable-warnings -q

      - name: Install uv
        run: |
          curl -LsSf https://github.com/astral-sh/uv/releases/download/0.5.11/uv-installer.sh -o /tmp/uv-install.sh
          echo "505407eb4b5bec00e0b231c8c86e968ee3f5aa0136d49dd8a541179e7f76ce7d  /tmp/uv-install.sh" | sha256sum -c -
          sh /tmp/uv-install.sh && rm /tmp/uv-install.sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build .pyz package
        run: ./scripts/build_pyz.sh

      - name: Install linuxdeploy for AppImage
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage
          sudo mv linuxdeploy-x86_64.AppImage /usr/local/bin/linuxdeploy

      - name: Build AppImage
        run: |
          export ARCH=x86_64
          ./packaging/appimage/build-appimage.sh
          mkdir -p dist
          mv provenance-demo-*.AppImage dist/ || true

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@da36cb69b1c3247ad7a1f931ebfd954a1105ef14  # v14
        with:
          extra-conf: |
            experimental-features = nix-command flakes

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@87b14cf437d03d37989d87f0fa5ce4f5dc1a330b  # v8

      - name: Build Nix package
        run: |
          nix build .# -L
          TAG="${{ github.ref_name }}"
          tar -czf dist/provenance-demo-x86_64-linux-${TAG}.tar.gz -C result/bin provenance-demo

      - name: SBOM + vuln report
        run: |
          uv pip install --system cyclonedx-bom pip-audit
          uv run --no-project cyclonedx-py environment --pyproject pyproject.toml --output-reproducible -o sbom.cdx.json
          pip-audit -r requirements.in -f json > vuln-report.json || true

      - name: Checksums
        run: |
          find dist -type f -print0 | sort -z | xargs -0 sha256sum > SHA256SUMS
          sha256sum sbom.cdx.json >> SHA256SUMS
          sha256sum vuln-report.json >> SHA256SUMS

      - name: Install cosign
        run: |
          COSIGN_VERSION="v2.2.4"
          curl -sSfL "https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64" -o /usr/local/bin/cosign
          chmod +x /usr/local/bin/cosign

      - name: Sign checksums (keyless)
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign-blob --yes --bundle SHA256SUMS.bundle SHA256SUMS

      - name: Attest provenance (GitHub)
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be  # v2.4.0
        with:
          subject-path: |
            dist/*
            sbom.cdx.json
            SHA256SUMS
            SHA256SUMS.bundle
            vuln-report.json

      - name: Create GitHub Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191  # v2.0.8
        with:
          files: |
            dist/*
            sbom.cdx.json
            SHA256SUMS
            SHA256SUMS.bundle
            vuln-report.json
          generate_release_notes: true
          body: |
            ## Install

            ### WinGet (Windows 11)
            ```powershell
            # After first release is approved in winget-pkgs:
            winget install redoubt-cysec.ProvenanceDemo
            ```

            ### Scoop (Windows)
            ```powershell
            scoop bucket add redoubt https://github.com/redoubt-cysec/scoop-bucket
            scoop install provenance-demo
            ```

            ### Chocolatey (Windows)
            ```powershell
            # From Chocolatey Community (recommended)
            choco install provenance-demo

            # Or from GitHub release:
            choco install provenance-demo --source="'https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}'"
            ```

            ### Direct Download (Linux/macOS)
            ```bash
            TAG=${{ github.ref_name }}
            REPO=${{ github.repository }}
            curl -LO https://github.com/$REPO/releases/download/$TAG/provenance-demo.pyz
            chmod +x provenance-demo.pyz && ./provenance-demo.pyz --version
            ```

            ## Verify (attestation)
            ```bash
            gh attestation verify provenance-demo.pyz --repo ${{ github.repository }}
            ```

            ## Verify (checksums + cosign)
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/SHA256SUMS
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/SHA256SUMS.bundle
            sha256sum --check SHA256SUMS --ignore-missing
            COSIGN_EXPERIMENTAL=1 cosign verify-blob \
              --bundle SHA256SUMS.bundle \
              --certificate-oidc-issuer https://token.actions.githubusercontent.com \
              --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/${{ github.workflow }}@refs/tags/${{ github.ref_name }}" \
              SHA256SUMS
            ```

            ## Rebuild from source
            ```bash
            git clone https://github.com/${{ github.repository }}.git && cd $(basename ${{ github.repository }})
            ./scripts/verify_build.sh ${{ github.ref_name }} ${{ github.repository_owner }} $(basename ${{ github.repository }}) provenance-demo.pyz
            ./scripts/verify_provenance.sh ${{ github.ref_name }} ${{ github.repository_owner }} $(basename ${{ github.repository }}) provenance-demo.pyz
            ```

      - name: Upload artifacts for Chocolatey job
        uses: actions/upload-artifact@ea165f2da5e53a576d6b8df6be8bb081d364c9c3  # v4.6.0
        with:
          name: pyz-artifact
          path: dist/provenance-demo.pyz
          retention-days: 1

      - name: Update Scoop bucket
        if: vars.SCOOP_BUCKET_REPO != ''
        run: |
          BUCKET_REPO="${{ vars.SCOOP_BUCKET_REPO }}"
          git clone "https://x-access-token:${{ secrets.SCOOP_BUCKET_TOKEN }}@github.com/${BUCKET_REPO}.git" /tmp/scoop-bucket
          cd /tmp/scoop-bucket
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          PYZ_SHA256=$(sha256sum dist/provenance-demo.pyz | awk '{print $1}')
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          cat > bucket/provenance-demo.json <<EOF
          {
              "version": "${VERSION}",
              "description": "Demo CLI showcasing supply chain security and provenance",
              "homepage": "https://github.com/${{ github.repository }}",
              "license": "MIT",
              "url": "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/provenance-demo.pyz",
              "hash": "${PYZ_SHA256}",
              "bin": "provenance-demo.pyz",
              "pre_install": [
                  "if (!(Get-Command python -ErrorAction SilentlyContinue)) {",
                  "    Write-Host 'Python 3.10+ is required. Install with: scoop install python'",
                  "    exit 1",
                  "}"
              ],
              "checkver": {
                  "github": "https://github.com/${{ github.repository }}"
              },
              "autoupdate": {
                  "url": "https://github.com/${{ github.repository }}/releases/download/v\$version/provenance-demo.pyz"
              },
              "notes": [
                  "Run 'provenance-demo verify' to validate all security attestations!",
                  "",
                  "Available commands:",
                  "  provenance-demo hello <name>  - Say hello",
                  "  provenance-demo verify        - Verify binary attestations",
                  "  provenance-demo --version     - Show version"
              ]
          }
          EOF
          git add bucket/provenance-demo.json
          git commit -m "chore: Update provenance-demo to ${VERSION}" || exit 0
          git push

  chocolatey:
    needs: release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Download .pyz artifact
        uses: actions/download-artifact@d3f8e04dea3f052d71297f4fb801f3b8e32d9d20  # v4.5.0
        with:
          name: pyz-artifact
          path: dist

      - name: Build Chocolatey package
        shell: powershell
        run: |
          pwsh -File scripts/build_chocolatey.ps1 -Version "${{ github.ref_name }}" -PyzPath "dist/provenance-demo.pyz"

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191  # v2.0.8
        with:
          files: dist/*.nupkg

      - name: Publish to Chocolatey Community
        if: secrets.CHOCOLATEY_API_KEY != ''
        shell: powershell
        env:
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
        run: |
          $nupkg = Get-ChildItem -Path dist -Filter "*.nupkg" | Select-Object -First 1
          Write-Host "Publishing $($nupkg.Name) to Chocolatey Community..."
          choco push $nupkg.FullName --source https://push.chocolatey.org/ --api-key $env:CHOCOLATEY_API_KEY
          Write-Host "Package published successfully!"
          Write-Host "Note: It may take a few minutes to appear in search results."

  winget:
    needs: release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Download .pyz artifact
        uses: actions/download-artifact@d3f8e04dea3f052d71297f4fb801f3b8e32d9d20  # v4.5.0
        with:
          name: pyz-artifact
          path: dist

      - name: Build WinGet manifests
        shell: powershell
        run: |
          pwsh -File scripts/build_winget.ps1 -Version "${{ github.ref_name }}" -PyzPath "dist/provenance-demo.pyz"

      - name: Create WinGet manifests archive
        shell: powershell
        run: |
          $version = "${{ github.ref_name }}" -replace '^v', ''
          $manifestDir = "packaging/winget/manifests/$version"
          Compress-Archive -Path "$manifestDir\*" -DestinationPath "winget-manifests-$version.zip"
          Move-Item "winget-manifests-$version.zip" dist/

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191  # v2.0.8
        with:
          files: dist/winget-manifests-*.zip
