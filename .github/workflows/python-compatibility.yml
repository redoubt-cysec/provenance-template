name: Python Compatibility Testing

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'scripts/build_pyz.sh'
      - '.github/workflows/python-compatibility.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'uv.lock'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # Quick unit tests on all Python versions
  unit-tests:
    name: Unit Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"

      - name: Run unit tests
        run: |
          python -m pytest tests/ -v --tb=short

      - name: Test package build
        run: |
          uv build
          ls -lh dist/

  # Full VM-based integration tests (slower, more thorough)
  vm-integration-tests:
    name: VM Integration Tests (Python 3.10-3.13)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python (for build)
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.11'

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Build .pyz
        run: |
          bash scripts/build_pyz.sh

      - name: Install Multipass (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo snap install multipass --classic
          multipass version

      - name: Install Multipass (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install multipass
          multipass version

      - name: Run Python multi-version VM tests
        run: |
          bash scripts/phase2-testing/test-python-multiversion-vm.sh

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: python-multiversion-logs-${{ matrix.os }}
          path: |
            /tmp/redoubt-*.log
            *.log
          retention-days: 7
          if-no-files-found: ignore

  # Summary job
  compatibility-summary:
    name: Compatibility Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, vm-integration-tests]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "## Python Compatibility Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Unit Tests" >> $GITHUB_STEP_SUMMARY
          echo "Status: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### VM Integration Tests" >> $GITHUB_STEP_SUMMARY
          echo "Status: ${{ needs.vm-integration-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.unit-tests.result }}" != "success" ] || [ "${{ needs.vm-integration-tests.result }}" != "success" ]; then
            echo "⚠️ **Some tests failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Python versions tested: 3.10, 3.11, 3.12, 3.13" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          echo "✅ **All Python versions (3.10-3.13) are compatible!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Tested on:" >> $GITHUB_STEP_SUMMARY
          echo "- Ubuntu (latest)" >> $GITHUB_STEP_SUMMARY
          echo "- macOS (latest)" >> $GITHUB_STEP_SUMMARY
