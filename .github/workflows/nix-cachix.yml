name: Nix Binary Cache (Cachix)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-cache:
    name: Build and Cache (${{ matrix.system }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            system: x86_64-linux
          - os: macos-latest
            system: aarch64-darwin

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        if: matrix.os == 'ubuntu-latest'
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@da36cb69b1c3247ad7a1f931ebfd954a1105ef14 # v14
        with:
          extra-conf: |
            experimental-features = nix-command flakes

      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@87b14cf437d03d37989d87f0fa5ce4f5dc1a330b # v8

      - name: Install Cachix
        uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          name: ${{ secrets.CACHIX_CACHE_NAME || 'redoubt' }}
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          pushFilter: '(-source$|nixpkgs\.tar\.gz$)'

      - name: Build with Nix
        run: |
          nix build .# -L --print-build-logs

      - name: Test package
        run: |
          ./result/bin/redoubt --version
          ./result/bin/redoubt hello "Cachix CI on ${{ matrix.system }}"

      - name: Check Cachix cache
        run: |
          CACHE_NAME="${{ secrets.CACHIX_CACHE_NAME || 'redoubt' }}"
          echo "Binary cached at: https://${CACHE_NAME}.cachix.org"

      - name: Build all outputs
        if: github.event_name == 'release'
        run: |
          # Build all flake outputs
          nix flake show
          nix build .#packages.${{ matrix.system }}.default -L

      - name: Create summary
        if: always()
        run: |
          CACHE_NAME="${{ secrets.CACHIX_CACHE_NAME || 'redoubt' }}"

          echo "## Nix Binary Cache (${{ matrix.system }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**System:** ${{ matrix.system }}" >> $GITHUB_STEP_SUMMARY
          echo "**Cache:** https://${CACHE_NAME}.cachix.org" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Install with Cachix:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "# Add binary cache" >> $GITHUB_STEP_SUMMARY
          echo "cachix use ${CACHE_NAME}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Install from cache (much faster!)" >> $GITHUB_STEP_SUMMARY
          echo "nix profile install github:${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  update-readme:
    name: Update README with Cachix Instructions
    runs-on: ubuntu-latest
    needs: build-and-cache
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Check if Cachix section exists
        run: |
          CACHE_NAME="${{ secrets.CACHIX_CACHE_NAME || 'redoubt' }}"

          echo "Cachix cache available at: https://${CACHE_NAME}.cachix.org"
          echo ""
          echo "To use the binary cache:"
          echo "  cachix use ${CACHE_NAME}"
          echo "  nix profile install github:${{ github.repository }}"
