name: upgrade-suite
on:
  workflow_dispatch:
    inputs:
      pkg_name: { description: Package name (e.g. redoubt), required: true }
      from_ver: { description: From version, required: true }
      to_ver:   { description: To version, required: true }
      apt_repo_url: { description: APT repo URL, required: true }
      apt_dist: { description: APT dist, default: "stable" }
      apt_component: { description: APT component, default: "main" }
      apt_gpg_url: { description: URL to APT pubkey, required: true }
      rpm_repo_url: { description: RPM repo URL, required: true }
      rpm_gpg_url: { description: URL to RPM pubkey, required: true }
      image: { description: GHCR image (e.g. ghcr.io/OWNER/redoubt), default: "ghcr.io/OWNER/redoubt" }
      from_tag: { description: Docker from tag, default: "1.0.0" }
      to_tag: { description: Docker to tag, default: "1.1.0" }
      snap_name: { description: Snap name, default: "redoubt" }
      snap_from: { description: Snap channel from, default: "edge" }
      snap_to:   { description: Snap channel to, default: "beta" }

jobs:
  run-upgrades:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install multipass
        run: sudo snap install multipass --classic
      - name: Run upgrade suite
        env:
          PKG_NAME:      ${{ github.event.inputs.pkg_name }}
          FROM_VER:      ${{ github.event.inputs.from_ver }}
          TO_VER:        ${{ github.event.inputs.to_ver }}
          APT_REPO_URL:  ${{ github.event.inputs.apt_repo_url }}
          APT_DIST:      ${{ github.event.inputs.apt_dist }}
          APT_COMPONENT: ${{ github.event.inputs.apt_component }}
          APT_GPG_URL:   ${{ github.event.inputs.apt_gpg_url }}
          RPM_REPO_URL:  ${{ github.event.inputs.rpm_repo_url }}
          RPM_GPG_URL:   ${{ github.event.inputs.rpm_gpg_url }}
          IMAGE:         ${{ github.event.inputs.image }}
          FROM_TAG:      ${{ github.event.inputs.from_tag }}
          TO_TAG:        ${{ github.event.inputs.to_tag }}
          SNAP_NAME:     ${{ github.event.inputs.snap_name }}
          FROM_CHANNEL:  ${{ github.event.inputs.snap_from }}
          TO_CHANNEL:    ${{ github.event.inputs.snap_to }}
        run: |
          bash scripts/phase2-testing/upgrade/run-upgrade-suite-local.sh
